services:
  - docker:20.10.16-dind

stages:
  - container

.base:
  stage: container
  image: docker:20.10.16
  variables: 
    BUILD_TARGET_STAGE: '' 
  timeout: 10m
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --target="${BUILD_TARGET_STAGE}" -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest

production:
  extends: .base
  variables: 
    BUILD_TARGET_STAGE: 'production' 
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_TAG == null'
      when: on_success

homolog:
  extends: .base
  variables: 
    BUILD_TARGET_STAGE: 'homolog' 
  rules:
    - if: '$CI_MERGE_REQUEST_ID != null && $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_TAG == null'
      when: on_success
  
development:
  extends: .base
  variables: 
    BUILD_TARGET_STAGE: 'development' 
  rules:
    - if: '$CI_MERGE_REQUEST_ID == null && $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_TAG == null'
      when: on_success